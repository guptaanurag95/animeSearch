{"version":3,"sources":["productActions.js","ActionCodes.js","components/Search.jsx","components/AnimeCard.jsx","components/CardGrid.jsx","App.js","productReducers.js","app/store.js","serviceWorker.js","index.js"],"names":["searchAnime","searchTerm","dispatch","getState","type","term","fetch","then","res","json","data","results","lastPage","last_page","currentPageNumber","catch","text","connect","handleSearch","e","which","undefined","style","width","backgroundColor","zIndex","position","top","left","overflow","FormControl","transform","margin","variant","InputLabel","htmlFor","OutlinedInput","id","onKeyPress","onChange","target","value","endAdornment","InputAdornment","IconButton","aria-label","onClick","labelWidth","AnimeCard","props","useState","open","setOpen","Card","CardActionArea","CardMedia","height","image","imageURL","title","CardContent","Typography","gutterBottom","component","Modal","aria-labelledby","aria-describedby","maxWidth","display","alignItems","justifyContent","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","border","boxShadow","padding","Grid","container","direction","justify","spacing","item","xs","src","alt","description","Link","href","detailsURL","state","isLoading","lastPageNumber","isError","showMoreEnable","isLoadingAdditionalData","displayText","marginTop","length","flexGrow","map","animeObject","index","key","image_url","url","synopsis","Button","color","App","initialState","productReducer","action","createStore","applyMiddleware","thunk","Boolean","window","location","hostname","match","ReactDOM","render","store","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.85a258d9.chunk.js","sourcesContent":["import {\n  SEARCH_TERM_ENTERED,\n  FETCH_DATA_ERROR,\n  FETCH_DATA_SUCCESS,\n  FETCH_ADDITIONAL_DATA,\n} from \"./ActionCodes\";\n\nexport function searchAnime(searchTerm) {\n  return (dispatch, getState) => {\n    let state = getState();\n    if (state.searchTerm === searchTerm) return;\n    dispatch({ type: SEARCH_TERM_ENTERED, term: searchTerm });\n\n    fetch(\"https://api.jikan.moe/v3/search/anime?q=\" + searchTerm + \"&limit=16\")\n      .then((res) => res.json())\n      .then((data) => {\n        dispatch({\n          type: FETCH_DATA_SUCCESS,\n          data: data.results,\n          lastPage: data.last_page,\n          currentPageNumber: 1,\n        });\n      })\n      .catch((text) => {\n        dispatch({ type: FETCH_DATA_ERROR });\n      });\n  };\n}\n\nexport function loadNextPage() {\n  return (dispatch, getState) => {\n    let state = getState();\n    if (state.currentPageNumber === state.lastPageNumber) return;\n    dispatch({ type: FETCH_ADDITIONAL_DATA });\n    fetch(\n      \"https://api.jikan.moe/v3/search/anime?q=\" +\n        state.searchTerm +\n        \"&limit=16&page=\" +\n        (state.currentPageNumber + 1)\n    )\n      .then((res) => res.json())\n      .then((data) => {\n        dispatch({\n          type: FETCH_DATA_SUCCESS,\n          data: [...state.data, ...data.results],\n          lastPage: data.last_page,\n          currentPageNumber: state.currentPageNumber + 1,\n        });\n      })\n      .catch((text) => {\n        dispatch({\n          type: FETCH_DATA_SUCCESS,\n          data: [...state.data],\n          lastPage: state.lastPageNumber,\n          currentPageNumber: state.currentPageNumber,\n        });\n      });\n  };\n}\n","export const FETCH_ADDITIONAL_DATA = \"Fetch_Additional_Data\";\nexport const FETCH_DATA_SUCCESS = \"Fetch_Data_Success\";\nexport const FETCH_DATA_ERROR = \"Fetch_Data_Error\";\nexport const SEARCH_TERM_ENTERED = \"New_Search_Term\";\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { searchAnime } from \"../productActions\";\n\nfunction Search({ dispatch }) {\n  let searchTerm = \"\";\n  let handleSearchTerm = (e) => {\n    searchTerm = e.target.value;\n  };\n  let handleSearch = (e) => {\n    if (e.which === 13) {\n      dispatch(searchAnime(searchTerm));\n    } else if (e.which === undefined) {\n      dispatch(searchAnime(searchTerm));\n    }\n  };\n\n  return (\n    <div\n      style={{\n        width: \"100%\",\n        backgroundColor: \"lightBlue\",\n        zIndex: 2,\n        position: \"fixed\",\n        top: 0,\n        left: 0,\n        overflow: \"hidden\",\n      }}\n    >\n      <FormControl\n        style={{\n          left: \"50%\",\n          transform: \"translate(-50%,0)\",\n          margin: 10,\n        }}\n        variant=\"outlined\"\n      >\n        <InputLabel htmlFor=\"standard-adornment-search\">\n          Search Anime\n        </InputLabel>\n        <OutlinedInput\n          id=\"standard-adornment-search\"\n          type=\"text\"\n          onKeyPress={handleSearch}\n          onChange={handleSearchTerm}\n          endAdornment={\n            <InputAdornment position=\"end\">\n              <IconButton aria-label=\"search\" onClick={handleSearch}>\n                <SearchIcon />\n              </IconButton>\n            </InputAdornment>\n          }\n          labelWidth={100}\n        />\n      </FormControl>\n    </div>\n  );\n}\n\nexport default connect()(Search);\n","import React, { useState } from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Modal from \"@material-ui/core/Modal\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport Fade from \"@material-ui/core/Fade\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Link from \"@material-ui/core/Link\";\n\nfunction AnimeCard(props) {\n  const [open, setOpen] = useState(false);\n\n  let handleOpen = (e) => {\n    setOpen(true);\n  };\n  let handleClose = (e) => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <Card style={{ width: 300 }}>\n        <CardActionArea onClick={handleOpen}>\n          <CardMedia\n            style={{ height: 400 }}\n            image={props.imageURL}\n            title={props.title}\n          />\n          <CardContent>\n            <Typography gutterBottom variant=\"h5\" component=\"h2\">\n              {props.title}\n            </Typography>\n          </CardContent>\n        </CardActionArea>\n      </Card>\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        style={{\n          maxWidth: \"70%\",\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          margin: \"auto\",\n        }}\n        open={open}\n        onClose={() => {\n          handleClose();\n        }}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <Fade in={open}>\n          <div\n            style={{\n              backgroundColor: \"white\",\n              border: \"1px solid #000\",\n              boxShadow: 5,\n              padding: 1,\n            }}\n          >\n            <Grid\n              container\n              direction=\"row\"\n              justify=\"center\"\n              alignItems=\"center\"\n              spacing={1}\n            >\n              <Grid item xs={6}>\n                <img\n                  src={props.imageURL}\n                  style={{\n                    width: \"100%\",\n                  }}\n                  alt=\"Not Found\"\n                />\n              </Grid>\n              <Grid item xs={6}>\n                <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                  {props.title}\n                </Typography>\n                <Typography variant=\"body2\" component=\"div\">\n                  {props.description}\n                  <br />\n                  <Link target=\"_blank\" href={props.detailsURL}>\n                    More Details...\n                  </Link>\n                </Typography>\n              </Grid>\n            </Grid>\n          </div>\n        </Fade>\n      </Modal>\n    </div>\n  );\n}\n\nexport default AnimeCard;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport Grid from \"@material-ui/core/Grid\";\nimport AnimeCard from \"./AnimeCard\";\nimport Button from \"@material-ui/core/Button\";\nimport { loadNextPage } from \"../productActions\";\nimport Typography from \"@material-ui/core/Typography\";\n\nfunction CardGrid(props) {\n  let handleClick = (e) => {\n    props.dispatch(loadNextPage());\n  };\n\n  let displayText = (text) => {\n    return (\n      <div\n        style={{\n          position: \"absolute\",\n          top: \"50%\",\n          left: \"50%\",\n          transform: \"translate(-50%,-50%)\",\n        }}\n      >\n        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n          {text}\n        </Typography>\n      </div>\n    );\n  };\n\n  return (\n    <div style={{ marginTop: \"90px\" }}>\n      {props.searchTerm === \"\" ? displayText(\"Enter a Search Term\") : \"\"}\n      {props.searchTerm !== \"\" && props.isLoading\n        ? displayText(\"Data Loading....\")\n        : \"\"}\n      {props.searchTerm !== \"\" && props.isError\n        ? displayText(\"Error loading data....\")\n        : \"\"}\n      {!props.isLoading && !props.isError && props.searchTerm !== \"\" ? (\n        <div>\n          {props.data.length === 0\n            ? displayText(\"No results found. Search Again.\")\n            : \"\"}\n          <Grid container style={{ flexGrow: 1 }} spacing={1}>\n            <Grid item xs={12}>\n              <Grid container justify=\"center\" spacing={1}>\n                {props.data.map((animeObject, index) => {\n                  return (\n                    <Grid key={index} item>\n                      <AnimeCard\n                        title={animeObject.title}\n                        imageURL={animeObject.image_url}\n                        detailsURL={animeObject.url}\n                        description={animeObject.synopsis}\n                      />\n                    </Grid>\n                  );\n                })}\n              </Grid>\n            </Grid>\n          </Grid>\n          {props.showMoreEnable ? (\n            <Button\n              color=\"secondary\"\n              onClick={handleClick}\n              style={{\n                margin: \"10px\",\n                left: \"50%\",\n                transform: \"translate(-50%,0)\",\n              }}\n            >\n              Load More...\n            </Button>\n          ) : (\n            \"\"\n          )}\n        </div>\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n}\n\nfunction mapStateToProps(state) {\n  const {\n    isLoading,\n    data,\n    currentPageNumber,\n    lastPageNumber,\n    isError,\n    searchTerm,\n    isLoadingAdditionalData,\n  } = state;\n  let showMoreEnable = !isLoadingAdditionalData;\n  if (currentPageNumber === lastPageNumber) showMoreEnable = false;\n  return {\n    isLoading,\n    isError,\n    showMoreEnable,\n    data,\n    searchTerm,\n  };\n}\n\nexport default connect(mapStateToProps)(CardGrid);\n","import React from \"react\";\r\nimport Search from \"./components/Search\";\r\nimport CardGrid from \"./components/CardGrid\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <Search />\r\n      <CardGrid />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import {\n  FETCH_DATA_SUCCESS,\n  FETCH_DATA_ERROR,\n  SEARCH_TERM_ENTERED,\n  FETCH_ADDITIONAL_DATA,\n} from \"./ActionCodes\";\n\nconst initialState = {\n  searchTerm: \"\",\n  data: [],\n  currentPageNumber: 1,\n  lastPageNumber: 1,\n  isLoading: true,\n  isError: false,\n  isLoadingAdditionalData: false,\n};\n\nfunction productReducer(state = initialState, action) {\n  switch (action.type) {\n    case SEARCH_TERM_ENTERED:\n      return {\n        ...state,\n        searchTerm: action.term,\n        isError: false,\n        isLoading: true,\n        isLoadingAdditionalData: false,\n      };\n    case FETCH_DATA_SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n        isError: false,\n        data: action.data,\n        lastPageNumber: action.lastPage,\n        isLoadingAdditionalData: false,\n        currentPageNumber: action.currentPageNumber,\n      };\n    case FETCH_DATA_ERROR:\n      return {\n        ...state,\n        isLoading: false,\n        isError: true,\n        data: [],\n        isLoadingAdditionalData: false,\n      };\n    case FETCH_ADDITIONAL_DATA:\n      return { ...state, isLoadingAdditionalData: true };\n    default:\n      return state;\n  }\n}\n\nexport default productReducer;\n","import { createStore, applyMiddleware } from \"@reduxjs/toolkit\";\r\nimport productReducer from \"../productReducers\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nexport default createStore(productReducer, applyMiddleware(thunk));\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport store from \"./app/store\";\r\nimport { Provider } from \"react-redux\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}